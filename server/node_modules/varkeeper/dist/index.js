let props=[],events=[];function setprop(e,n){n instanceof Function&&(n=n());var t=props.find(n=>n.name===e);null!=t?(on_function("set",e,n),n!==t.value&&(t.value=n,on_function("change",e,n))):(props.push({name:e,value:n}),on_function("create",e,n))}function getEventsFromTypeAndName(e,n){let t=[];return events.length>0&&(t=events.filter(t=>t.name===e&&t.type===n)),t}function getprop(e){let n=props.find(n=>n.name===e);return null!=n?(on_function("get",e,n.value),n.value):void 0}function deleteprop(e){props=props.filter(n=>n.name!==e)}function on(e,n,t){events.push({type:e,callback:t,name:n})}function on_function(e,n,t){let o=getEventsFromTypeAndName(n,e);if(o.length>0)switch(e){case"change":case"create":case"get":case"set":o.forEach(e=>e.callback(t));break;default:o.forEach(e=>e.callback({err:404,msg:"Event not found"}))}}function use(e,n){e instanceof Prop&&(e=e.name);let t=getprop(e);if(void 0===t){t=e;const{v4:n}=require("uuid");setprop(e=n(),t)}n(t),deleteprop(e)}Prop=function(e,n){this._init(e,n)},Prop.prototype={constructor:Prop,name:null,value:null,_init:function(e,n){console.log(events),null==n&&void 0!==props.find(n=>n.name===e)?(myprop=props.find(n=>n.name===e),setprop(e,myprop.value),this.value=myprop.value):(setprop(e,n),this.value=n),this.name=e},set:function(e){setprop(this.name,e)},get:function(){return getprop(this.name)},delete:function(){deleteprop(this.name)},on:function(e,n){on(e,this.name,n)},use:function(e){use(this.name,e)}},module.exports={setprop:setprop,getprop:getprop,deleteprop:deleteprop,on:on,use:use,Prop:Prop};